# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        python-version: [# "3.9", # "3.10", "3.11",
        "3.12"]

    steps:

    - name: install protobuf
      uses: ConorMacBride/install-package@v1
      with:
          apt: protobuf-compiler

    - name: Checkout setuptools-protobuf
      uses: actions/checkout@v4
      with:
          repository: hz-b/setuptools-protobuf
          path: setuptools-protobuf
          ref: dev/feature/cpp-interface

    - name: Checkout bact-archiver
      uses: actions/checkout@v4
      with:
          path: bact-archiver
          ref: dev/feature/setuptools-protobuf

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
           **/setup.cfg
           **/pyproject.toml
           **/requirements*.txt
         # try to cache package install

    - name: Install setuptools-protobuf
      run: |
           find . -type f
           t_dir=setuptools-protobuf
           if [ -f $t_dir/requirements.txt ]; then pip install -r $t_dir/requirements.txt; fi
           # make it a path, otherwise it searches pypi repo
           pip install $t_dir/

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest wheel
        if [ -f bact-archiver/requirements.txt ]; then pip install -r bact-archiver/requirements.txt; fi

    - name: build and binary module
      run: |
        python -m pip install bact-archiver/

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest --log-cli-level INFO
